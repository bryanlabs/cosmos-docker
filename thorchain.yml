x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  builder:
    restart: "no"
    build:
      context: ./builder
      dockerfile: Dockerfile
    image: builder:thornode
    pull_policy: never
    environment:
      - THORNODE_VERSION=${THORNODE_VERSION}
      - FORCE_REBUILD=${FORCE_REBUILD}
    volumes:
      - thornode-builds:/builds

  thorchain:
    build:
      context: ./thorchain
      dockerfile: Dockerfile.source
      args:
        - THORNODE_VERSION=${THORNODE_VERSION}
        - USER=thornode
    image: thorchain:local
    pull_policy: never
    user: thornode
    restart: unless-stopped
    stop_grace_period: 5m
    environment:
      - THORNODE_VERSION=${THORNODE_VERSION}
      - THORNODE_REPO=${THORNODE_REPO:-https://gitlab.com/thorchain/thornode}
      - EXTRA_FLAGS=${EXTRA_FLAGS:-}
      - NETWORK=${NETWORK}
      - MONIKER=${MONIKER}
      - RPC_PORT=${RPC_PORT:-27147}
      - P2P_PORT=${P2P_PORT:-27146}
      - GRPC_PORT=${GRPC_PORT:-9090}
      - GRPC_WEB_PORT=${GRPC_WEB_PORT:-9091}
      - REST_PORT=${REST_PORT:-1317}
      - SNAPSHOT=${SNAPSHOT}
      - SNAPSHOT_API_URL=${SNAPSHOT_API_URL:-https://snapshots.ninerealms.com/snapshots?prefix=thornode}
      - SNAPSHOT_BASE_URL=${SNAPSHOT_BASE_URL:-https://snapshots.ninerealms.com/snapshots/thornode/}
      - SEEDS=${SEEDS}
      - PERSISTENT_PEERS=${PERSISTENT_PEERS}
      - MAX_INBOUND_PEERS=${MAX_INBOUND_PEERS:-400}
      - MAX_OUTBOUND_PEERS=${MAX_OUTBOUND_PEERS:-400}
      - P2P_PEX=${P2P_PEX:-true}
      - P2P_ADDR_BOOK_STRICT=${P2P_ADDR_BOOK_STRICT:-true}
      - P2P_FLUSH_THROTTLE_TIMEOUT=${P2P_FLUSH_THROTTLE_TIMEOUT:-30s}
      - P2P_DIAL_TIMEOUT=${P2P_DIAL_TIMEOUT:-10s}
      - P2P_HANDSHAKE_TIMEOUT=${P2P_HANDSHAKE_TIMEOUT:-3s}
      - P2P_ALLOW_DUPLICATE_IP=${P2P_ALLOW_DUPLICATE_IP:-false}
      - PRIVATE_PEER_IDS=${PRIVATE_PEER_IDS}
      - EXTERNAL_ADDRESS=${EXTERNAL_ADDRESS}
      - GENESIS_URL=${GENESIS_URL:-https://storage.googleapis.com/public-snapshots-ninerealms/genesis/17562000.json}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - GOMAXPROCS=${GOMAXPROCS}
      - GOMEMLIMIT=${GOMEMLIMIT}
      - DAEMON_HOME=/thornode
      - DAEMON_NAME=thornode
    ports:
      - ${P2P_PORT:-27146}:${P2P_PORT:-27146}/tcp
      - ${RPC_PORT:-27147}:${RPC_PORT:-27147}/tcp
      - ${GRPC_PORT:-9090}:${GRPC_PORT:-9090}/tcp
      - ${GRPC_WEB_PORT:-9091}:${GRPC_WEB_PORT:-9091}/tcp
      - ${REST_PORT:-1317}:${REST_PORT:-1317}/tcp
    depends_on:
      builder:
        condition: service_completed_successfully
    <<: *logging
    volumes:
      - /mnt/data/blockchain/:/thornode
      - thornode-builds:/builds
    entrypoint:
      - docker-entrypoint.sh
      - start
      - --home
      - /thornode
    labels:
        - traefik.enable=true
        - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
        - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
        - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
        - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
        - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
        - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
        - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
        - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
        - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=${RPC_PORT}
        - traefik.http.routers.${REST_HOST}.service=${REST_HOST}
        - traefik.http.routers.${REST_HOST}.entrypoints=websecure
        - traefik.http.routers.${REST_HOST}.rule=Host(`${REST_HOST}.${DOMAIN}`)
        - traefik.http.routers.${REST_HOST}.tls.certresolver=letsencrypt
        - traefik.http.routers.${REST_HOST}lb.service=${REST_HOST}
        - traefik.http.routers.${REST_HOST}lb.entrypoints=websecure
        - traefik.http.routers.${REST_HOST}lb.rule=Host(`${REST_LB}.${DOMAIN}`)
        - traefik.http.routers.${REST_HOST}lb.tls.certresolver=letsencrypt
        - traefik.http.services.${REST_HOST}.loadbalancer.server.port=${REST_PORT}

volumes:
  thornode-data:
  thornode-builds: